<?php
/*
 * Created on Jan 26, 2014
 *
 * Metadata for the SoT database. This is all loaded into a private property array
 * in the Sot_Database class, accesable from the Get_Metadata_Array() method.
 */

$sot_metadata['servers']['column_name'   ]['hide'           ] = '1';               # Keep the table id field hidden from users
$sot_metadata['servers']['column_name'   ]['field_heading'  ] = '1';               # This is the heading field
$sot_metadata['servers']['column_name'   ]['comment'        ] = 'column_comment';
$sot_metadata['servers']['id'            ]['hide'           ] = '1';               # Keep the table id field hidden from users
$sot_metadata['servers']['id'            ]['primary_key'    ] = '1';               # Mark this as the primary key
$sot_metadata['servers']['name'          ]['mandatory'      ] = '4';               # This field must exist with a minimum of 4 chars
$sot_metadata['servers']['name'          ]['mandatory_text' ] = 'name is too short.';   # The error text if this field is too short
$sot_metadata['servers']['name'          ]['no_modify'      ] = '1';               # Make sure this field cannot be modified
$sot_metadata['servers']['name'          ]['enter_once'     ] = '1';               # Clear this field after a successfull CI insert
$sot_metadata['servers']['name'          ]['displaymode'    ] = 'apps comments';   # Make sure this field is displayed in all edit modes
$sot_metadata['servers']['name'          ]['uniqueness'     ] = '1';               # The number of times this value can appear in the database
$sot_metadata['servers']['name'          ]['unique_text'    ] = 'name is not unique.'; # Error text if count > uniqueness
$sot_metadata['servers']['fqdn'          ]['enter_once'     ] = '1';               # Clear this field after a successfull CI insert
$sot_metadata['servers']['fqdn'          ]['uniqueness'     ] = '1';               # The number of times this value can appear in the database
$sot_metadata['servers']['fqdn'          ]['unique_text'    ] = 'fqdn is not unique.'; # Error text if count > uniqueness
$sot_metadata['servers']['alias'         ]['enter_once'     ] = '1';               # Clear this field after a successfull CI insert
$sot_metadata['servers']['alias'         ]['uniqueness'     ] = '1';               # The number of times this value can appear in the database
$sot_metadata['servers']['alias'         ]['unique_text'    ] = 'alias is not unique.'; # Error text if count > uniqueness
$sot_metadata['servers']['ip'            ]['enter_once'     ] = '1';               # Clear this field after a successfull CI insert
$sot_metadata['servers']['ip'            ]['uniqueness'     ] = '1';               # The number of times this value can appear in the database
$sot_metadata['servers']['ip'            ]['unique_text'    ] = 'ip is not unique.'; # Error text if count > uniqueness
$sot_metadata['servers']['network_loc'   ]['input'          ] = 'list';
$sot_metadata['servers']['env'           ]['input'          ] = 'list';
$sot_metadata['servers']['cluster'       ]['input'          ] = 'list';
$sot_metadata['servers']['os'            ]['input'          ] = 'list';
$sot_metadata['servers']['cat'           ]['input'          ] = 'list';
$sot_metadata['servers']['location'      ]['input'          ] = 'list';
$sot_metadata['servers']['model'         ]['input'          ] = 'list';
$sot_metadata['servers']['serial'        ]['enter_once'     ] = '1';               # Clear this field after a successfull CI insert
$sot_metadata['servers']['ram'           ]['nosearch'       ] = '1';               # Do not search on this field
$sot_metadata['servers']['local_disk'    ]['nosearch'       ] = '1';               # Do not search on this field
$sot_metadata['servers']['san_disk'      ]['nosearch'       ] = '1';               # Do not search on this field
$sot_metadata['servers']['it_support'    ]['input'          ] = 'list';
$sot_metadata['servers']['it_support'    ]['appgroup'       ] = 'apps';
$sot_metadata['servers']['is_support'    ]['displaymode'    ] = 'apps';            # Make sure this is displyed when in apps editing mode
$sot_metadata['servers']['bus_owner'     ]['input'          ] = 'list';
$sot_metadata['servers']['bus_owner'     ]['appgroup'       ] = 'apps';
$sot_metadata['servers']['bus_owner'     ]['displaymode'    ] = 'apps';            # Make sure this is displyed when in apps editing mode
$sot_metadata['servers']['workload'      ]['input'          ] = 'list';
$sot_metadata['servers']['workload'      ]['appgroup'       ] = 'apps';
$sot_metadata['servers']['workload'      ]['displaymode'    ] = 'apps';            # Make sure this is displyed when in apps editing mode
$sot_metadata['servers']['ci_mgr'        ]['input'          ] = 'list';
$sot_metadata['servers']['ci_os'         ]['input'          ] = 'list';
$sot_metadata['servers']['status'        ]['input'          ] = 'enum';
$sot_metadata['servers']['type'          ]['input'          ] = 'enum';
$sot_metadata['servers']['hardware'      ]['input'          ] = 'enum';
$sot_metadata['servers']['hw_support'    ]['input'          ] = 'enum';
$sot_metadata['servers']['os_support'    ]['input'          ] = 'enum';
$sot_metadata['servers']['os_support'    ]['ci_owner'       ] = '1';               # The group that can modify this CI.
$sot_metadata['servers']['os_support'    ]['mandatory'      ] = '2';               # This field must exist
$sot_metadata['servers']['os_support'    ]['mandatory_text' ] = 'os_support is insufficient.';   # The error text if this field is too short
$sot_metadata['servers']['notes'         ]['input'          ] = 'large';
$sot_metadata['servers']['notes'         ]['appgroup'       ] = 'apps';
$sot_metadata['servers']['notes'         ]['displaymode'    ] = 'apps';            # Make sure this is displyed when in apps editing mode
$sot_metadata['servers']['notes'         ]['nosearch'       ] = '1';               # Do not search on this field
$sot_metadata['servers']['comment'       ]['input'          ] = 'large';
$sot_metadata['servers']['comment'       ]['displaymode'    ] = 'comment apps';    # Make sure this is displyed when in comment and apps editing mode
$sot_metadata['servers']['comment'       ]['appgroup'       ] = 'apps';
$sot_metadata['servers']['comment'       ]['mandatory'      ] = '8';               # This field must exist and have at least 8 chars
$sot_metadata['servers']['comment'       ]['mandatory_text' ] = 'insufficient comment. Please enter a detailed description of the changes you are making, including an incident number or a change number, into the comment field';   # The error text if this field is too short
$sot_metadata['servers']['comment'       ]['nosearch'       ] = '1';               # Do not search on this field
$sot_metadata['servers']['comment'       ]['edit_once'      ] = '1';               # Clear this field after a successfull CI edit
$sot_metadata['servers']['id'            ]['comment'        ] = 'Primary Key for internal MySQL use';
$sot_metadata['servers']['name'          ]['comment'        ] = 'The CI\'s host name, server name, appliance name or cluster access point\'s name';
$sot_metadata['servers']['fqdn'          ]['comment'        ] = 'Fully Qualified Domain Name';
$sot_metadata['servers']['alias'         ]['comment'        ] = 'Space delimited list of aliases';
$sot_metadata['servers']['ip'            ]['comment'        ] = 'Space delimited list of IP addresses';
$sot_metadata['servers']['network_loc'   ]['comment'        ] = 'Network location - DIN/T2/SGS/etc';
$sot_metadata['servers']['env'           ]['comment'        ] = 'Environment classification E1 - E9';
$sot_metadata['servers']['cluster'       ]['comment'        ] = 'Cluster name if this CI is part of a cluster';
$sot_metadata['servers']['status'        ]['comment'        ] = 'The CI\'s current status - enum(build,prod,decom,nonprod)';
$sot_metadata['servers']['os'            ]['comment'        ] = 'The CI\'s operating system';
$sot_metadata['servers']['cat'           ]['comment'        ] = 'CI category key - iris/sun_glb/aix_host/redhat_vi/etc';
$sot_metadata['servers']['type'          ]['comment'        ] = 'The type of CI - enum(Physical,Virtual,GlobalZone,Cluster)';
$sot_metadata['servers']['physhost'      ]['comment'        ] = 'If virtual, the hostname, frame name or server farm supporting this VI';
$sot_metadata['servers']['location'      ]['comment'        ] = 'Physical location/data centre';
$sot_metadata['servers']['hardware'      ]['comment'        ] = 'The physical or virtual hardware type supporting this CI - enum(IBM,Sun,VMware,Cyclades,Del,Not_Listed,TBA)';
$sot_metadata['servers']['model'         ]['comment'        ] = 'Model name, blank if virtual. C10/Enterprise T5220/etc';
$sot_metadata['servers']['serial'        ]['comment'        ] = 'Chasis serial number if applicable';
$sot_metadata['servers']['cpu_count'     ]['comment'        ] = 'Number of CPUs/vCPUs available to the CI';
$sot_metadata['servers']['ram'           ]['comment'        ] = 'Memory in kB available to the CI';
$sot_metadata['servers']['local_disk'    ]['comment'        ] = 'Total local storage (disk) available';
$sot_metadata['servers']['san_disk'      ]['comment'        ] = 'Total SAN storage allocated';
$sot_metadata['servers']['hw_support'    ]['comment'        ] = 'The team responsible for hardware support if the CI is non virtual - enum(UMO,UMO-UNIX,WMO,Unisys,SGS)';
$sot_metadata['servers']['os_support'    ]['comment'        ] = 'The team responsible for OS support - enum(UMO,UMO-UNIX,WMO,Unisys,SGS)';
$sot_metadata['servers']['it_support'    ]['comment'        ] = 'The team responsible for application support';
$sot_metadata['servers']['bus_owner'     ]['comment'        ] = 'The business owner/team';
$sot_metadata['servers']['workload'      ]['comment'        ] = 'List of primary applications or VIs running on this CI';
$sot_metadata['servers']['notes'         ]['comment'        ] = 'Free text notes/comments/description relating to this CI';
$sot_metadata['servers']['ci_mgr'        ]['comment'        ] = 'System management / Satellite server';
$sot_metadata['servers']['ci_os'         ]['comment'        ] = 'Global zone\'s hostname';
$sot_metadata['servers']['ci_hw'         ]['comment'        ] = 'Physical server\'s hostname';
$sot_metadata['servers']['comment'       ]['comment'        ] = 'Any information associated with this CI, such as ticked numbers, change numbers, project reference, etc';

# Table meta data:
$sot_metadata['table']['servers'         ]['add_field'      ] = 'comment';        # Comments field appended to the printed table fields
$sot_metadata['table']['servers'         ]['orientation'    ] = 'vert';           # Try to display single records vertically
//$sot_metadata['table']['servers'         ]['editor'         ] = 'editor';          # Users in the editor group can modify all fields except those with no_modify meta data.
//$sot_metadata['table']['servers'         ]['comment'        ] = 'Store server type CIs';

# Users field metadata:
$sot_metadata['users']['column_name'     ]['hide'           ] = '1';               # Keep the table id field hidden from users
$sot_metadata['users']['column_name'     ]['field_heading'  ] = '1';               # This is the heading field
$sot_metadata['users']['column_name'     ]['comment'        ] = 'column_comment';
$sot_metadata['users']['id'              ]['hide'           ] = '1';               # Keep the table id field hidden from users
$sot_metadata['users']['id'              ]['primary_key'    ] = '1';               # Mark this as the primary key
$sot_metadata['users']['id'              ]['comment'        ] = 'Primary Key for internal MySQL use';
$sot_metadata['users']['name'            ]['comment'        ] = 'The user\'s login name';
$sot_metadata['users']['name'            ]['mandatory'      ] = '4';               # This field must exist
$sot_metadata['users']['name'            ]['mandatory_text' ] = 'name is too short.'; # The error text if this field is too short
$sot_metadata['users']['name'            ]['no_modify'      ] = '1';               # Make sure this field cannot be modified
$sot_metadata['users']['name'            ]['enter_once'     ] = '1';               # Clear this field after a successfull CI insert
$sot_metadata['users']['name'            ]['uniqueness'     ] = '1';               # The number of times this value can appear in the database
$sot_metadata['users']['name'            ]['unique_text'    ] = 'name is not unique.'; # Error text if count > uniqueness
$sot_metadata['users']['uid'             ]['mandatory'      ] = '2';               # This field must exist
$sot_metadata['users']['uid'             ]['mandatory_text' ] = 'uid is too short.'; # The error text if this field is too short
$sot_metadata['users']['uid'             ]['enter_once'     ] = '1';
$sot_metadata['users']['uid'             ]['uniqueness'     ] = '1';               # The number of times this value can appear in the database
$sot_metadata['users']['uid'             ]['unique_text'    ] = 'uid is not unique.'; # Error text if count > uniqueness
$sot_metadata['users']['uid'             ]['numeric'        ] = '1';               # Field value must be numeric
$sot_metadata['users']['uid'             ]['autosearch'     ] = '5900';            # Automatically search for the first vacant number starting from this value.
$sot_metadata['users']['gecos'           ]['mandatory'      ] = '2';               # This field must exist
$sot_metadata['users']['gecos'           ]['mandatory_text' ] = 'gecos is too short.'; # The error text if this field is too short
$sot_metadata['users']['gecos'           ]['enter_once'     ] = '1';
$sot_metadata['users']['system'          ]['input'          ] = 'enum';
$sot_metadata['users']['status'          ]['input'          ] = 'enum';
$sot_metadata['users']['comment'         ]['input'          ] = 'large';
$sot_metadata['users']['comment'         ]['mandatory'      ] = '8';               # This field must exist
$sot_metadata['users']['comment'         ]['mandatory_text' ] = 'insufficient comment. Please enter a detailed description of the changes you are making to this user, including an incident number or a change number, into the comment field.';   # The error text if this field is too short
$sot_metadata['users']['comment'         ]['nosearch'       ] = '1';               # Do not search on this field
$sot_metadata['users']['comment'         ]['edit_once'      ] = '1';               # Clear this field after a successfull CI edit
$sot_metadata['users']['comment'         ]['displaymode'    ] = 'comment';    # Make sure this is displyed when in comment and apps editing mode
$sot_metadata['users']['uid'             ]['comment'        ] = 'The numerical value of the user\'s ID';
$sot_metadata['users']['gecos'           ]['comment'        ] = 'The user\'s full name and company - "First_name Sir_name"';
$sot_metadata['users']['department'      ]['comment'        ] = 'The internal branch this user belongs to - eg: umo-unix';
$sot_metadata['users']['shell'           ]['comment'        ] = 'The name of the user\'s default login shell';
$sot_metadata['users']['pgroup'          ]['comment'        ] = 'Primary group - usually "users"';
$sot_metadata['users']['sgroup'          ]['comment'        ] = 'Default secondary group - eg "umoadmin"';
$sot_metadata['users']['id_rsa_pub'      ]['comment'        ] = 'Public SSH key';
$sot_metadata['users']['system'          ]['comment'        ] = 'System account if yes, user account if no - enum(Yes,No)';
$sot_metadata['users']['status'          ]['comment'        ] = 'The current status of the account - enum(Active,Locked,Left)';
$sot_metadata['users']['comment'         ]['comment'        ] = 'Any information associated with the status of this user, such as Infra numbers, etc';

# Table meta data:
$sot_metadata['table']['users'           ]['add_field'      ] = 'comment';         # Comments field appended to the printed table fields
$sot_metadata['table']['users'           ]['orientation'    ] = 'vert';

# Groups field metadata:
$sot_metadata['groups']['column_name'    ]['hide'           ] = '1';               # Keep the table id field hidden from users
$sot_metadata['groups']['column_name'    ]['field_heading'  ] = '1';               # This is the heading field
$sot_metadata['groups']['column_name'    ]['comment'        ] = 'column_comment';
$sot_metadata['groups']['id'             ]['hide'           ] = '1';               # Keep the table id field hidden from users
$sot_metadata['groups']['id'             ]['primary_key'    ] = '1';               # Mark this as the primary key
$sot_metadata['groups']['id'             ]['comment'        ] = 'Primary Key for internal MySQL use';
$sot_metadata['groups']['name'           ]['comment'        ] = 'The group\'s name';
$sot_metadata['groups']['name'           ]['mandatory'      ] = '2';               # This field must exist
$sot_metadata['groups']['name'           ]['mandatory_text' ] = 'name is too short.';   # The error text if this field is too short
$sot_metadata['groups']['name'           ]['no_modify'      ] = '1';               # Make sure this field cannot be modified
$sot_metadata['groups']['name'           ]['enter_once'     ] = '1';               # Clear this field after a successfull CI insert
$sot_metadata['groups']['name'           ]['uniqueness'     ] = '1';               # The number of times this value can appear in the database
$sot_metadata['groups']['name'           ]['unique_text'    ] = 'name is not unique.'; # Error text if count > uniqueness
$sot_metadata['groups']['lin_gid'        ]['enter_once'     ] = '1';
$sot_metadata['groups']['lin_gid'        ]['mandatory'      ] = '2';               # This field must exist
$sot_metadata['groups']['lin_gid'        ]['mandatory_text' ] = 'lin_gid is too short.';
$sot_metadata['groups']['lin_gid'        ]['uniqueness'     ] = '1';               # The number of times this value can appear in the database
$sot_metadata['groups']['lin_gid'        ]['unique_text'    ] = 'lin_gid is not unique.'; # Error text if count > uniqueness
$sot_metadata['groups']['lin_gid'        ]['numeric'        ] = '1';               # Field value must be numeric
$sot_metadata['groups']['lin_gid'        ]['autosearch'     ] = '1000';            # Automatically search for the first vacant number starting from this value.
$sot_metadata['groups']['aix_gid'        ]['enter_once'     ] = '2';
$sot_metadata['groups']['aix_gid'        ]['mandatory'      ] = '1';               # This field must exist
$sot_metadata['groups']['aix_gid'        ]['mandatory_text' ] = 'aix_gid is too short.';
$sot_metadata['groups']['aix_gid'        ]['uniqueness'     ] = '1';               # The number of times this value can appear in the database
$sot_metadata['groups']['aix_gid'        ]['numeric'        ] = '1';               # Field value must be numeric
$sot_metadata['groups']['aix_gid'        ]['unique_text'    ] = 'aix_gid is not unique.'; # Error text if count > uniqueness
$sot_metadata['groups']['aix_gid'        ]['autosearch'     ] = '1000';            # Automatically search for the first vacant number starting from this value.
$sot_metadata['groups']['system_group'   ]['input'          ] = 'enum';
$sot_metadata['groups']['status'         ]['input'          ] = 'enum';
$sot_metadata['groups']['comment'        ]['input'          ] = 'large';
$sot_metadata['groups']['comment'        ]['mandatory'      ] = '8';               # This field must exist
$sot_metadata['groups']['comment'        ]['mandatory_text' ] = 'insufficient comment. Please enter a detailed description of the changes you are making to this group, including an incident number or a change number, into the comment field.';   # The error text if this field is too short
$sot_metadata['groups']['comment'        ]['nosearch'       ] = '1';               # Do not search on this field
$sot_metadata['groups']['comment'        ]['edit_once'      ] = '1';               # Clear this field after a successfull CI edit
$sot_metadata['groups']['comment'        ]['displaymode'    ] = 'comment';         # Make sure this is displyed when in comment editing mode
$sot_metadata['groups']['lin_gid'        ]['comment'        ] = 'The numerical value of the group\'s ID on Linux';
$sot_metadata['groups']['aix_gid'        ]['comment'        ] = 'The numerical value of the group\'s ID on AIX';
$sot_metadata['groups']['system_group'   ]['comment'        ] = 'System group if yes, user group if no - enum(Yes,No)';
$sot_metadata['groups']['status'         ]['comment'        ] = 'The current status of the group - enum(Active,Locked,Incative)';
$sot_metadata['groups']['comment'        ]['comment'        ] = 'Any information associated with the status of this group, such as Infra numbers, project codes, etc';

# Table meta data:
$sot_metadata['table']['groups'          ]['add_field'      ] = 'comment';         # Comments field appended to the printed table fields
$sot_metadata['table']['groups'          ]['orientation'    ] = 'vert';